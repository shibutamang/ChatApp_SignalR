@using ChatApp.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="row"> 
    <div class="col-md-12">
 
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Login to start your session.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="input-group mb-3 col-md-4">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-envelope-o"></i></span>
                </div>
                @*<input type="text" class="form-control" name="Email" placeholder="Email">*@
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })

            </div>
            <div class="ml-3">
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="input-group mb-3 col-md-4">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-lock"></i></span>
                </div>
                @*<input type="password" class="form-control" name="Password" placeholder="Password">*@
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
             
            </div>
            <div class="ml-3">
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            @*@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>*@
        </div>
                @*<div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-info">Login</button>
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                <p>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                </p>*@
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
        </section>
    </div>
</div>
 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}